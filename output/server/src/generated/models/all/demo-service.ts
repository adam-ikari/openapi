// Generated by Microsoft TypeSpec

export interface UserList {
  items: User[];
}

export interface Error {
  code: number;

  msg: string;
}

/**
 *
 */
export interface User {
  id: string;

  name: string;

  age: number;

  gender: Gender;
}

export enum Gender {
  Male = "male",
  Female = "female",
}

export interface Users<Context = unknown> {
  /**
   * List widgets
   */
  list(ctx: Context): Promise<UserList | Error>;

  /**
   * Read widgets
   */
  read(ctx: Context, id: string): Promise<User | Error>;

  /**
   * Create a widget
   */
  create(ctx: Context, body: User): Promise<User | Error>;

  /**
   * Update a widget
   */
  update(ctx: Context, id: string, body: User): Promise<User | Error>;

  /**
   * Delete a widget
   */
  delete(ctx: Context, id: string): Promise<void | Error>;
}
