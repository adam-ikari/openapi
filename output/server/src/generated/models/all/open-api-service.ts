// Generated by Microsoft TypeSpec

export interface UserList {
  /**
   * The list of users
   */
  items: User[];
}

export interface Error {
  /**
   * The error code
   */
  code: number;

  /**
   * The error message
   */
  msg: string;
}

export interface User {
  /**
   * The unique identifier of the user
   */
  id: string;

  /**
   * The name of the user
   */
  name: string;

  /**
   * The age of the user
   */
  age: number;

  /**
   * The gender of the user
   */
  gender: Gender;
}

/**
 * The enum of the gender
 */
export enum Gender {
  Secret = "secret",
  Male = "male",
  Female = "female",
}

export interface Users<Context = unknown> {
  /**
   * List users
   */
  list(ctx: Context): Promise<UserList | Error>;

  /**
   * Read users
   */
  read(ctx: Context, id: string): Promise<User | Error>;

  /**
   * Create a users
   */
  create(ctx: Context, body: User): Promise<User | Error>;

  /**
   * Update a users
   */
  update(ctx: Context, id: string, body: User): Promise<User | Error>;

  /**
   * Delete a users
   */
  delete(ctx: Context, id: string): Promise<void | Error>;
}
